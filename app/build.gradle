plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions' apply false
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

apply from: '../autodimension.gradle'

def APP_ID = "com.example.flowmvvm"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "${APP_ID}"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [applicationName: "@string/app_name"]
            applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }

            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""

        }

        prod {
            manifestPlaceholders = [applicationName: "@string/app_name"]
            applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }

            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
        }
    }

    buildTypes {

        debug {
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        useBuildCache = true
    }

    kapt {
        mapDiagnosticLocations = true
    }

    kotlinOptions.freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalContracts",
            "-Xuse-experimental=kotlinx.coroutines.FlowPreview"]
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // KTX
    def core_ktx_version = "1.5.0"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // Lifecycle KTX
    def lifecycle_ktx_version = "2.4.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_ktx_version"

    // App
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.2.0'

    // Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Paging
    def paging_version = "3.1.0-alpha01"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    //Retrofit and OkHttp
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    def OkHttp3_version = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$OkHttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$OkHttp3_version"

    //Glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Coroutines
    def coroutines_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // RxAndroid, RxKotlin
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // Koin
    def koin_version = '2.2.2'
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"
    implementation "org.koin:koin-androidx-workmanager:$koin_version"

    // Leak Canary
    implementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

@SuppressWarnings("GroovyAssignabilityCheck")
def appendVersionNameVersionCode(variant) {
    variant.outputs.all { output ->
        def time = new Date().format("dd-MM-yyyy", TimeZone.getTimeZone("UTC"))
        outputFileName = "${variant.name}-${variant.versionName}-${time}.apk"
    }
}